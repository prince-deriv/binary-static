{"version":3,"sources":["webpack://deriv-com/./src/pages/landing/weekend-trading/components/_hero.js","webpack://deriv-com/./src/pages/landing/weekend-trading/components/_image-text-switching.js","webpack://deriv-com/./src/pages/landing/weekend-trading/components/_title-btn.js","webpack://deriv-com/./src/pages/landing/weekend-trading/index.js"],"names":["BackgroundWrapper","styled","Background","device","Wrapper","Container","InformationWrapper","Flex","HeroContent","Header","StyledHeader","TryButton","LinkButton","HeroComponent","title","content","background_data","data","p","justify","height","direction","type","target","rel","secondary","to","localize","useStaticQuery","min_width","StyledSection","SectionContainer","StyledContainer","Content","props","margin_right","Text","ImageWrapper","StyledText","Row","flex_direction","P2P","reverse","two_title","background","padding","align","lh","size","mb","weight","map","item","index","is_even","isIndexEven","key","width","max_width","pb","subtitle1","subtitle2","subtitle_mobile1","subtitle_mobile2","second_title","second_subtitle1","second_subtitle2","image_name","alt","image_alt","btnlabel","text","mt","pl","pr","m","IconTextRow","Loadable","DP2P_CONTENT","translate_text","components","WithIntl","is_ppc_redirect","description"],"mappings":"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","file":"component---src-pages-landing-weekend-trading-index-js-08f71b85698c81880243.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Flex, Container, Show } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { Background } from 'components/elements/background-image'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device.js'\n\nconst BackgroundWrapper = styled(Background)`\n    background-size: cover;\n    background-position: bottom right;\n    @media ${device.desktopL} {\n        height: 73rem;\n    }\n    @media ${device.desktop} {\n        height: 65rem;\n    }\n    @media ${device.tabletL} {\n        height: 155rem;\n    }\n    @media ${device.tablet} {\n        height: 136rem;\n    }\n    @media ${device.tabletS} {\n        height: 105rem;\n    }\n    @media ${device.mobileL} {\n        height: 95rem;\n    }\n    @media ${device.mobileM} {\n        height: 90rem;\n    }\n    @media ${device.mobileS} {\n        height: 80rem;\n    }\n`\n\nconst Wrapper = styled(Container)`\n    @media ${device.tabletS} {\n        margin-left: 0;\n        padding: 2.1rem 16px 0;\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\n\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 71rem;\n    z-index: 1;\n\n    @media ${device.tabletL} {\n        max-width: 55rem;\n        top: 280px;\n        padding: 0 16px;\n    }\n    @media ${device.mobileL} {\n        max-width: 328px;\n        padding: 0;\n    }\n`\n\nconst HeroContent = styled(Flex)`\n    height: unset;\n\n    ${Header} {\n        font-weight: 350;\n        color: var(--color-black-3);\n        display: flex;\n        margin-top: 1rem;\n    }\n\n    @media ${device.mobileL} {\n        ${Header} {\n            margin: 10px 0 0;\n        }\n    }\n`\nconst StyledHeader = styled(Header)`\n    color: var(--color-black-3);\n    display: flex;\n\n    @media ${device.tabletL} {\n        margin-top: 1.3rem;\n    }\n    @media ${device.mobileS} {\n        margin-top: 0;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    padding: 17px 24px;\n    width: min-content;\n    white-space: nowrap;\n    font-size: 18px;\n    margin-top: 1.2rem;\n    border: unset;\n    font-weight: 500;\n\n    @media ${device.tablet} {\n        padding: 14px 18px;\n        font-size: 14px;\n        margin-top: 40px;\n        font-weight: 700;\n    }\n    @media ${device.mobileL} {\n        margin-top: 20px;\n    }\n    @media ${device.mobileS} {\n        margin-top: 10px;\n    }\n`\n\nconst HeroComponent = ({ title, content, background_data }) => {\n    return (\n        <BackgroundWrapper data={background_data}>\n            <Wrapper p=\"4rem 0 0\" justify=\"space-between\" height=\"unset\">\n                <InformationWrapper height=\"unset\" direction=\"column\">\n                    <StyledHeader type=\"hero\">{title}</StyledHeader>\n                    <HeroContent direction=\"column\" justify=\"flex-start\">\n                        <Header type=\"subtitle-1\">{content}</Header>\n                    </HeroContent>\n                    <TryButton\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer nofollow\"\n                        type=\"submit\"\n                        secondary=\"true\"\n                        to={'/signup/'}\n                    >\n                        {localize('Get trading')}\n                    </TryButton>\n                </InformationWrapper>\n            </Wrapper>\n        </BackgroundWrapper>\n    )\n}\n\nconst query = graphql`\n    query {\n        p2p_hero_background: file(relativePath: { eq: \"landing/weekend.png\" }) {\n            ...fadeIn\n        }\n        p2p_hero_background_mobile: file(relativePath: { eq: \"landing/weekend-m.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = ({ title, content }) => {\n    const data = useStaticQuery(query)\n\n    return (\n        <div>\n            <Show.Desktop min_width=\"800\">\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background']}\n                />\n            </Show.Desktop>\n            <Show.Mobile>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background_mobile']}\n                />\n            </Show.Mobile>\n        </div>\n    )\n}\n\nHeroComponent.propTypes = {\n    background_data: PropTypes.any,\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    title: PropTypes.string,\n}\n\nHero.propTypes = {\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    title: PropTypes.string,\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer, Show } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { isIndexEven } from 'common/utility'\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px 0;\n    }\n`\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n\n    ${Text} {\n        font-weight: 350;\n        @media ${device.tabletL} {\n            font-weight: 400;\n            font-size: 18px;\n            text-align: center;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\n\nconst ImageWrapper = styled.div`\n    max-width: 47.1rem;\n    width: 100%;\n    max-height: 30rem;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        width: 98%;\n        margin-top: 0;\n        text-align: center;\n    }\n`\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        line-height: 30px;\n    }\n`\nconst Row = styled.div`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 9rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        margin-top: 40px;\n    }\n`\n\nconst query = graphql`\n    query {\n        buy_sell: file(relativePath: { eq: \"landing/crypto1.png\" }) {\n            ...fadeIn\n        }\n        local_currency: file(relativePath: { eq: \"landing/crypto2.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst ImageTextSwitching = ({ P2P, reverse, two_title }) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection background=\"var(--color-white)\" padding=\"5rem 0 0 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText\n                    align=\"center\"\n                    lh=\"4rem\"\n                    size=\"var(--text-size-l)\"\n                    mb=\"1rem\"\n                    weight=\"bold\"\n                >\n                    {localize('Trade the markets that never sleep')}\n                </StyledText>\n\n                {P2P.map((item, index) => {\n                    let is_even = isIndexEven(index, reverse)\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content\n                                width=\"100%\"\n                                max_width=\"58.8rem\"\n                                margin_right={!is_even ? '12.6rem' : '0'}\n                            >\n                                <StyledHeader type=\"heading-3\" mb=\"1rem\">\n                                    {item.title}\n                                </StyledHeader>\n                                <Show.Desktop>\n                                    <Text size=\"var(--text-size-m)\" pb=\"2rem\">\n                                        {item.subtitle1}\n                                    </Text>\n                                </Show.Desktop>\n                                <Show.Desktop>\n                                    <Text size=\"var(--text-size-m)\">{item.subtitle2}</Text>\n                                </Show.Desktop>\n                                <Show.Mobile>\n                                    <Text pb=\"2rem\">{item.subtitle_mobile1}</Text>\n                                </Show.Mobile>\n                                <Show.Mobile>\n                                    <Text>{item.subtitle_mobile2}</Text>\n                                </Show.Mobile>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader type=\"heading-3\">\n                                            {item.second_title}\n                                        </StyledHeader>\n                                        <Text>{item.second_subtitle1}</Text>\n                                        <Text>{item.second_subtitle2}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '12.6rem'}>\n                                <QueryImage\n                                    data={data[item.image_name]}\n                                    alt={item.image_alt}\n                                    width=\"100%\"\n                                />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nImageTextSwitching.propTypes = {\n    P2P: PropTypes.array,\n    reverse: PropTypes.bool,\n    two_title: PropTypes.bool,\n}\n\nexport default ImageTextSwitching\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Text } from 'components/elements'\nimport { LinkButton } from 'components/form'\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        margin-top: 2rem;\n        padding: 40px 16px 0;\n    }\n`\n\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        font-size: 24px;\n        line-height: 30px;\n        text-align: center;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    @media ${device.mobileL} {\n        white-space: nowrap;\n        margin-bottom: 2rem;\n    }\n    @media ${device.mobileL} {\n        margin-top: 24px 0 40px;\n    }\n`\n\nconst Titlebtn = ({ btnlabel, text }) => {\n    return (\n        <StyledSection background=\"var(--color-grey-30)\" padding=\"7rem 0 3rem\" mt=\"9rem\">\n            <StyledContainer direction=\"column\">\n                <StyledText mt=\"16px\" pl=\"2rem\" pr=\"2rem\" size=\"3.2rem\" weight=\"700\">\n                    {text}\n                </StyledText>\n                <TryButton\n                    m=\"4.2rem 0 40px\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer nofollow\"\n                    type=\"submit\"\n                    secondary=\"true\"\n                    to={'/signup/'}\n                >\n                    {btnlabel}\n                </TryButton>\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nTitlebtn.propTypes = {\n    btnlabel: PropTypes.string,\n    text: PropTypes.string,\n}\n\nexport default Titlebtn\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport Hero from './components/_hero'\nimport ImageTextSwitching from './components/_image-text-switching'\nimport Titlebtn from './components/_title-btn'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\nimport { SEO } from 'components/containers'\nconst IconTextRow = Loadable(() => import('./components/_icon-text-row'))\n\nconst DP2P_CONTENT = [\n    {\n        title: <Localize translate_text=\"Synthetic indices\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Deriv's synthetic indices mimic real-world market movements and offer various volatility levels to suit your risk appetite.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin), DTrader (with options and multipliers), and Deriv GO (with multipliers).\" />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Deriv's synthetic indices mimic real-world market movements and offer various volatility levels to suit your risk appetite.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin), DTrader (with options and multipliers), and Deriv GO (with multipliers).\" />\n        ),\n\n        image_name: 'buy_sell',\n        image_alt: localize('Buy and sell'),\n    },\n    {\n        title: <Localize translate_text=\"Cryptocurrency\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Correctly predict the price movements of the world's most popular cryptocurrencies. Over 17 crypto pairs to trade on.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin) and DTrader (with multipliers).\" />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Correctly predict the price movements of the world's most popular cryptocurrencies. Over 17 crypto pairs to trade on.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile2: (\n            <Localize translate_text=\"Available to trade on Deriv MT5 and Deriv X (with margin) and DTrader (with multipliers).\" />\n        ),\n\n        image_name: 'local_currency',\n        image_alt: localize('Local currency'),\n    },\n]\n\nconst WeekenLP = () => {\n    return (\n        <Layout type=\"landing-page\" is_ppc_redirect={true}>\n            <SEO\n                title={localize('Weekends')}\n                description={localize('Ride the trends even on weekends')}\n            />\n            <Hero\n                title={localize('Ride the trends even on weekends')}\n                content={\n                    <Localize translate_text=\"Trade even when most financial markets are closed\" />\n                }\n            />\n            <IconTextRow />\n            <ImageTextSwitching reverse P2P={DP2P_CONTENT} />\n            <Titlebtn\n                btnlabel={localize('Get trading')}\n                text={localize('Create your Deriv account now and start trading!')}\n            />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(WeekenLP)\n"],"sourceRoot":""}