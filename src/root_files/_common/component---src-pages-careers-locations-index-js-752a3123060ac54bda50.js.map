{"version":3,"sources":["webpack://deriv-com/./src/pages/careers/_layout-components/_team-card.js","webpack://deriv-com/./src/pages/careers/locations/index.js"],"names":["StyledCard","styled","LocalizedLink","props","height","ImageWrapper","StyledContent","StyledHeader","Header","device","StyledText","Text","to","img_data","display_team_name","tagline","data","width","alt","localize","as","meta_attributes","og_title","og_description","ChevronRight","Chevron","BackDrop","StyledSectionContainer","SectionContainer","StyledImg","Hero","fd","size","align","color","CountryCardWrapper","StyledDiv","CountryCard","country_name","city_name","link","Icon","jc","ai","mt","mb","src","weight","WithIntl","images","useStaticQuery","type","margin_top","title","description","direction","padding","columns","row_gap","column_gap","laptop_columns","laptop_margin","tablet_columns","mobile_columns","mobile_row_gap","style","marginTop","justifyContent","margin","all_offices","office","key","name","flagIcon","thumbnail","country","display_name"],"mappings":"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","file":"component---src-pages-careers-locations-index-js-752a3123060ac54bda50.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { QueryImage, Text, Header } from 'components/elements'\nimport { LocalizedLink, localize } from 'components/localization'\nimport device from 'themes/device'\n\nexport const StyledCard = styled(LocalizedLink)`\n    text-decoration: none;\n    position: relative;\n    height: ${(props) => (props.height ? props.height : 'auto')};\n    width: 100%;\n    border-radius: 6px;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    background: var(--color-white);\n    overflow: hidden;\n    cursor: pointer;\n    border: 1px solid #e6e9e9;\n    margin-bottom: 1.5rem;\n\n    &:hover {\n        box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n    }\n`\n\nexport const NormalCard = styled.article`\n    position: relative;\n    height: ${(props) => (props.height ? props.height : 'auto')};\n    width: 100%;\n    box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n    background: var(--color-white);\n`\n\nconst ImageWrapper = styled.div`\n    height: 100%;\n    width: 194px;\n`\n\nconst StyledContent = styled.div`\n    padding: 16px;\n    width: 100%;\n`\n\nconst StyledHeader = styled(Header)`\n    font-size: 16px;\n    line-height: 24px;\n\n    @media ${device.tablet} {\n        font-size: 14px;\n        line-height: 20px;\n    }\n`\nconst StyledText = styled(Text)`\n    font-size: 14px;\n    line-height: 20px;\n\n    @media ${device.tablet} {\n        font-size: 12px;\n        line-height: 18px;\n    }\n`\n\nconst TeamCard = ({ to, img_data, display_team_name, tagline }) => (\n    <StyledCard height=\"144px\" to={to}>\n        <ImageWrapper>\n            <QueryImage\n                data={img_data}\n                height=\"144px\"\n                width=\"100%\"\n                alt={localize('Team ') + display_team_name}\n            />\n        </ImageWrapper>\n        <StyledContent>\n            <StyledHeader as=\"h5\">{display_team_name}</StyledHeader>\n            <StyledText>{tagline}</StyledText>\n        </StyledContent>\n    </StyledCard>\n)\n\nTeamCard.propTypes = {\n    display_team_name: PropTypes.string,\n    img_data: PropTypes.object,\n    tagline: PropTypes.string,\n    team_name: PropTypes.string,\n    to: PropTypes.string,\n}\n\nexport default TeamCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { StyledCard } from '../_layout-components/_team-card'\nimport { all_offices } from '../_model/_locations/_locations'\nimport device from 'themes/device'\nimport { SEO, SectionContainer, Container, Flex, CssGrid } from 'components/containers'\nimport Layout from 'components/layout/layout'\nimport { WithIntl, localize } from 'components/localization'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { ReactComponent as Chevron } from 'images/svg/careers/carousel-chevron.svg'\n\nconst meta_attributes = {\n    og_title: localize('Explore our office locations | Deriv'),\n    og_description: localize(\n        'Discover career opportunities at Deriv across our office locations around the globe.',\n    ),\n}\n\nconst ChevronRight = styled(Chevron)`\n    transform: rotate(180deg);\n    width: 16px;\n    height: 16px;\n`\n\nconst BackDrop = styled.section`\n    background-color: var(--color-black);\n    padding: 120px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    @media ${device.mobile} {\n        padding: 80px 0;\n        align-items: center;\n    }\n\n    ${Header} {\n        padding-bottom: 16px;\n    }\n    ${Text} {\n        max-width: 79.2rem;\n        text-align: center;\n    }\n`\nconst StyledSectionContainer = styled(SectionContainer)`\n    margin: 0 16px;\n    max-width: 100%;\n    @media ${device.tablet} {\n        padding: 40px 0;\n        margin: 0;\n    }\n`\nconst StyledImg = styled.img`\n    margin-right: 8px;\n`\n\nconst Hero = () => (\n    <BackDrop>\n        <Container fd=\"column\">\n            <Header as=\"h1\" size=\"var(--text-size-xl)\" align=\"center\" color=\"white\">\n                Our locations\n            </Header>\n            <Text size=\"var(--text-size-sm)\" color=\"white\">\n                From IT to marketing to data analytics, we offer opportunities for people of almost\n                every skill set across our locations around the globe. As we expand, our culture of\n                collaboration gives our teams the opportunity to enjoy a diverse, dynamic, and\n                rewarding career experience.\n            </Text>\n        </Container>\n    </BackDrop>\n)\n\nconst CountryCardWrapper = styled(StyledCard)`\n    display: flex;\n    flex-direction: column;\n    text-decoration: none;\n    margin: 0;\n\n    svg {\n        margin-right: 8px;\n    }\n`\nconst StyledText = styled(Text)`\n    font-size: 16px;\n\n    @media ${device.laptop} {\n        font-size: 14px;\n    }\n`\n\nconst StyledDiv = styled.div`\n    flex-direction: column;\n    width: 100%;\n    min-height: 140px;\n    padding: 24px 24px 24px 25px;\n`\n\nconst CountryCard = ({ country_name, city_name, link, img_data, Icon }) => {\n    return (\n        <CountryCardWrapper to={link}>\n            <QueryImage data={img_data} alt={city_name + localize('Office')} width=\"100%\" />\n            <StyledDiv>\n                <Header as=\"h5\" size=\"var(--text-size-sm)\">\n                    {city_name}\n                </Header>\n                <Flex jc=\"unset\" ai=\"center\" mt=\"8px\" mb=\"8px\">\n                    <StyledImg src={Icon} alt=\"\" />\n                    <StyledText weight=\"bold\">{country_name}</StyledText>\n                </Flex>\n                <Flex ai=\"center\" jc=\"flex-end\" width=\"100%\">\n                    <ChevronRight />\n                </Flex>\n            </StyledDiv>\n        </CountryCardWrapper>\n    )\n}\n\nCountryCard.propTypes = {\n    city_name: PropTypes.string,\n    country_name: PropTypes.string,\n    Icon: PropTypes.string,\n    img_data: PropTypes.object,\n    link: PropTypes.string,\n    open_positions: PropTypes.number,\n}\n\nconst query = graphql`\n    query {\n        thumbnail_cyberjaya: file(relativePath: { eq: \"careers/thumbnail_cyberjaya.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_dubai: file(relativePath: { eq: \"careers/thumbnail_dubai.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_labuan: file(relativePath: { eq: \"careers/thumbnail_labuan.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_malta: file(relativePath: { eq: \"careers/thumbnail_malta.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_asuncion: file(relativePath: { eq: \"careers/thumbnail_asuncion.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_ipoh: file(relativePath: { eq: \"careers/thumbnail_ipoh.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_melaka: file(relativePath: { eq: \"careers/thumbnail_melaka.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_cyprus: file(relativePath: { eq: \"careers/thumbnail_cyprus.png\" }) {\n            ...fadeIn\n        }\n        thumbnail_rwanda: file(relativePath: { eq: \"careers/thumbnail_rwanda.jpg\" }) {\n            ...fadeIn\n        }\n        thumbnail_minsk: file(relativePath: { eq: \"careers/thumbnail_minsk.jpg\" }) {\n            ...fadeIn\n        }\n        thumbnail_paris: file(relativePath: { eq: \"careers/thumbnail_paris.jpg\" }) {\n            ...fadeIn\n        }\n        thumbnail_london: file(relativePath: { eq: \"careers/thumbnail_london.jpg\" }) {\n            ...fadeIn\n        }\n        thumbnail_guernsey: file(relativePath: { eq: \"careers/thumbnail_guernsey.jpg\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Locations = () => {\n    const images = useStaticQuery(query)\n\n    return (\n        <Layout type=\"careers\" margin_top={7}>\n            <SEO\n                title={localize('Explore our office locations | Deriv')}\n                description={localize(\n                    'Discover career opportunities at Deriv across our office locations around the globe.',\n                )}\n                meta_attributes={meta_attributes}\n            />\n            <Hero />\n            <StyledSectionContainer direction=\"column\" padding=\"80px 16px\">\n                <Header\n                    as=\"h2\"\n                    align=\"center\"\n                    padding=\"0 0 35px\"\n                    size={'var(--text-size-header-1)'}\n                >\n                    Explore our locations\n                </Header>\n                <CssGrid\n                    columns=\"repeat(3, 384px)\"\n                    row_gap=\"40px\"\n                    column_gap=\"24px\"\n                    laptop_columns=\"repeat(3, minmax(280px, 384px))\"\n                    laptop_margin=\"0 16px\"\n                    tablet_columns=\"repeat(2, 1fr)\"\n                    mobile_columns=\"minmax(300px, 384px)\"\n                    mobile_row_gap=\"37px\"\n                    style={{ marginTop: '0rem', justifyContent: 'center' }}\n                    margin=\"0 16px\"\n                >\n                    {all_offices.map((office) => (\n                        <CountryCard\n                            key={office.name}\n                            Icon={office.flagIcon}\n                            img_data={images[office.thumbnail]}\n                            country_name={office.country}\n                            city_name={office.display_name}\n                            link={office.link}\n                        />\n                    ))}\n                </CssGrid>\n            </StyledSectionContainer>\n        </Layout>\n    )\n}\n\nexport default WithIntl()(Locations)\n"],"sourceRoot":""}